measure[BatchNorm]: i(1 3 224 224) cost(0.0237)
measure[BatchNorm]: i(1 64 112 112) cost(0.0225)
measure[BatchNorm]: i(1 64 56 56) cost(0.0057)
measure[BatchNorm]: i(1 128 28 28) cost(0.0051)
measure[BatchNorm]: i(1 256 14 14) cost(0.0045)
measure[BatchNorm]: i(1 512 7 7) cost(0.0044)
Found unsupported ONNX operator: Flatten (Skipped)
 original_cost = 2.1132116317749023
[added by cxt] xfers.size():4
        cost[Conv2D]: i(1 3 224 224) w(64 3 7 7) s(2 2) p(0) cost(0.0724) total_cost(0.0961)
        cost[Activation]: mode(8) cost(0.0221) total_cost(0.1408)
        cost[Pool2D]: i(1 64 112 112) k(3 3) s(2 2) cost(0.0220) total_cost(0.1628)
        cost[Activation]: mode(8) cost(0.0064) total_cost(0.1748)
        cost[Conv2D]: i(1 64 56 56) w(64 64 3 3) s(1 1) p(0) cost(0.0789) total_cost(0.2537)
        cost[Conv2D]: i(1 64 56 56) w(64 64 1 1) s(1 1) p(0) cost(0.0264) total_cost(0.2801)
        cost[Activation]: mode(8) cost(0.0064) total_cost(0.2922)
        cost[Conv2D]: i(1 64 56 56) w(64 64 3 3) s(1 1) p(0) cost(0.0789) total_cost(0.3711)
        cost[Element]: cost(0.0181) total_cost(0.3891)
        cost[Activation]: mode(8) cost(0.0064) total_cost(0.4012)
        cost[Conv2D]: i(1 64 56 56) w(64 64 3 3) s(1 1) p(0) cost(0.0789) total_cost(0.4801)
        cost[Activation]: mode(8) cost(0.0064) total_cost(0.4922)
        cost[Conv2D]: i(1 64 56 56) w(64 64 3 3) s(1 1) p(0) cost(0.0789) total_cost(0.5710)
        cost[Element]: cost(0.0181) total_cost(0.5891)
        cost[Activation]: mode(8) cost(0.0064) total_cost(0.6012)
        cost[Conv2D]: i(1 64 56 56) w(128 64 3 3) s(2 2) p(0) cost(0.0714) total_cost(0.6726)
        cost[Conv2D]: i(1 64 56 56) w(128 64 1 1) s(2 2) p(0) cost(0.0203) total_cost(0.6929)
        cost[Activation]: mode(8) cost(0.0101) total_cost(0.7081)
        cost[Conv2D]: i(1 128 28 28) w(128 128 3 3) s(1 1) p(0) cost(0.0445) total_cost(0.7526)
        cost[Element]: cost(0.0073) total_cost(0.7598)
        cost[Activation]: mode(8) cost(0.0101) total_cost(0.7750)
        cost[Conv2D]: i(1 128 28 28) w(128 128 3 3) s(1 1) p(0) cost(0.0445) total_cost(0.8195)
        cost[Activation]: mode(8) cost(0.0101) total_cost(0.8347)
        cost[Conv2D]: i(1 128 28 28) w(128 128 3 3) s(1 1) p(0) cost(0.0445) total_cost(0.8792)
        cost[Element]: cost(0.0073) total_cost(0.8865)
        cost[Activation]: mode(8) cost(0.0101) total_cost(0.9016)
        cost[Conv2D]: i(1 128 28 28) w(256 128 3 3) s(2 2) p(0) cost(0.1271) total_cost(1.0288)
        cost[Conv2D]: i(1 128 28 28) w(256 128 1 1) s(2 2) p(0) cost(0.0277) total_cost(1.0564)
        cost[Activation]: mode(8) cost(0.0096) total_cost(1.0705)
        cost[Conv2D]: i(1 256 14 14) w(256 256 3 3) s(1 1) p(0) cost(0.0595) total_cost(1.1299)
        cost[Element]: cost(0.0055) total_cost(1.1355)
        cost[Activation]: mode(8) cost(0.0096) total_cost(1.1495)
        cost[Conv2D]: i(1 256 14 14) w(256 256 3 3) s(1 1) p(0) cost(0.0595) total_cost(1.2090)
        cost[Activation]: mode(8) cost(0.0096) total_cost(1.2230)
        cost[Conv2D]: i(1 256 14 14) w(256 256 3 3) s(1 1) p(0) cost(0.0595) total_cost(1.2825)
        cost[Element]: cost(0.0055) total_cost(1.2880)
        cost[Activation]: mode(8) cost(0.0096) total_cost(1.3020)
        cost[Conv2D]: i(1 256 14 14) w(512 256 3 3) s(2 2) p(0) cost(0.2637) total_cost(1.5657)
        cost[Conv2D]: i(1 256 14 14) w(512 256 1 1) s(2 2) p(0) cost(0.0435) total_cost(1.6092)
        cost[Activation]: mode(8) cost(0.0060) total_cost(1.6196)
        cost[Conv2D]: i(1 512 7 7) w(512 512 3 3) s(1 1) p(0) cost(0.1472) total_cost(1.7668)
        cost[Element]: cost(0.0104) total_cost(1.7772)
        cost[Activation]: mode(8) cost(0.0060) total_cost(1.7876)
        cost[Conv2D]: i(1 512 7 7) w(512 512 3 3) s(1 1) p(0) cost(0.1472) total_cost(1.9348)
        cost[Activation]: mode(8) cost(0.0060) total_cost(1.9452)
        cost[Conv2D]: i(1 512 7 7) w(512 512 3 3) s(1 1) p(0) cost(0.1472) total_cost(2.0924)
        cost[Element]: cost(0.0104) total_cost(2.1028)
        cost[Activation]: mode(8) cost(0.0060) total_cost(2.1132)
        Cost metrics: exe_time(2.1132) flops(6.8212) memory_access(276.3037) kernel_launches(67)

        ===== Start Cost-Based Backtracking Search =====
        [0] cost = 2.1132 bestCost = 2.1132 candidates.size() = 0
        [1] cost = 2.0907 bestCost = 2.0907 candidates.size() = 8
        [2] cost = 2.0850 bestCost = 2.0850 candidates.size() = 15
        [3] cost = 2.0793 bestCost = 2.0793 candidates.size() = 21
        [4] cost = 2.0742 bestCost = 2.0742 candidates.size() = 26
        [5] cost = 2.0691 bestCost = 2.0691 candidates.size() = 30
        [6] cost = 2.0646 bestCost = 2.0646 candidates.size() = 33
        [7] cost = 2.0602 bestCost = 2.0602 candidates.size() = 35
        [8] cost = 2.0558 bestCost = 2.0558 candidates.size() = 36
        [9] cost = 2.0514 bestCost = 2.0514 candidates.size() = 36
        [10] cost = 2.0558 bestCost = 2.0514 candidates.size() = 35
        [11] cost = 2.0603 bestCost = 2.0514 candidates.size() = 34
        [12] cost = 2.0559 bestCost = 2.0514 candidates.size() = 34
        [13] cost = 2.0603 bestCost = 2.0514 candidates.size() = 33
        [14] cost = 2.0646 bestCost = 2.0514 candidates.size() = 32
        [15] cost = 2.0603 bestCost = 2.0514 candidates.size() = 33
        [16] cost = 2.0559 bestCost = 2.0514 candidates.size() = 33
        [17] cost = 2.0603 bestCost = 2.0514 candidates.size() = 32
        [18] cost = 2.0647 bestCost = 2.0514 candidates.size() = 31
        [19] cost = 2.0604 bestCost = 2.0514 candidates.size() = 31
        [20] cost = 2.0647 bestCost = 2.0514 candidates.size() = 30
        [21] cost = 2.0697 bestCost = 2.0514 candidates.size() = 29
        [22] cost = 2.0652 bestCost = 2.0514 candidates.size() = 31
        [23] cost = 2.0609 bestCost = 2.0514 candidates.size() = 32
        [24] cost = 2.0565 bestCost = 2.0514 candidates.size() = 32
        [25] cost = 2.0609 bestCost = 2.0514 candidates.size() = 31
        [26] cost = 2.0653 bestCost = 2.0514 candidates.size() = 30
        [27] cost = 2.0610 bestCost = 2.0514 candidates.size() = 30
        [28] cost = 2.0653 bestCost = 2.0514 candidates.size() = 29
        [29] cost = 2.0697 bestCost = 2.0514 candidates.size() = 28
        [30] cost = 2.0653 bestCost = 2.0514 candidates.size() = 29
        [31] cost = 2.0610 bestCost = 2.0514 candidates.size() = 29
        [32] cost = 2.0653 bestCost = 2.0514 candidates.size() = 28
        [33] cost = 2.0698 bestCost = 2.0514 candidates.size() = 27
        [34] cost = 2.0654 bestCost = 2.0514 candidates.size() = 27
        [35] cost = 2.0698 bestCost = 2.0514 candidates.size() = 26
        [36] cost = 2.0742 bestCost = 2.0514 candidates.size() = 25
        [37] cost = 2.0697 bestCost = 2.0514 candidates.size() = 28
        [38] cost = 2.0652 bestCost = 2.0514 candidates.size() = 30
        [39] cost = 2.0609 bestCost = 2.0514 candidates.size() = 31
        [40] cost = 2.0565 bestCost = 2.0514 candidates.size() = 31
        [41] cost = 2.0609 bestCost = 2.0514 candidates.size() = 30
        [42] cost = 2.0653 bestCost = 2.0514 candidates.size() = 29
        [43] cost = 2.0610 bestCost = 2.0514 candidates.size() = 29
        [44] cost = 2.0653 bestCost = 2.0514 candidates.size() = 28
        [45] cost = 2.0697 bestCost = 2.0514 candidates.size() = 27
        [46] cost = 2.0653 bestCost = 2.0514 candidates.size() = 28
        [47] cost = 2.0610 bestCost = 2.0514 candidates.size() = 28
        [48] cost = 2.0653 bestCost = 2.0514 candidates.size() = 27
        [49] cost = 2.0698 bestCost = 2.0514 candidates.size() = 26
        [50] cost = 2.0654 bestCost = 2.0514 candidates.size() = 26
        [51] cost = 2.0698 bestCost = 2.0514 candidates.size() = 25
        [52] cost = 2.0748 bestCost = 2.0514 candidates.size() = 24
        [53] cost = 2.0703 bestCost = 2.0514 candidates.size() = 26
        [54] cost = 2.0659 bestCost = 2.0514 candidates.size() = 27
        [55] cost = 2.0616 bestCost = 2.0514 candidates.size() = 27
        [56] cost = 2.0659 bestCost = 2.0514 candidates.size() = 26
        [57] cost = 2.0704 bestCost = 2.0514 candidates.size() = 25
        [58] cost = 2.0660 bestCost = 2.0514 candidates.size() = 25
        [59] cost = 2.0704 bestCost = 2.0514 candidates.size() = 24
        [60] cost = 2.0748 bestCost = 2.0514 candidates.size() = 23
        [61] cost = 2.0704 bestCost = 2.0514 candidates.size() = 24
        [62] cost = 2.0660 bestCost = 2.0514 candidates.size() = 24
        [63] cost = 2.0704 bestCost = 2.0514 candidates.size() = 23
        [64] cost = 2.0749 bestCost = 2.0514 candidates.size() = 22
        [65] cost = 2.0705 bestCost = 2.0514 candidates.size() = 22
        [66] cost = 2.0749 bestCost = 2.0514 candidates.size() = 21
        [67] cost = 2.0799 bestCost = 2.0514 candidates.size() = 20
        [68] cost = 2.0748 bestCost = 2.0514 candidates.size() = 24
        [69] cost = 2.0703 bestCost = 2.0514 candidates.size() = 27
        [70] cost = 2.0659 bestCost = 2.0514 candidates.size() = 29
        [71] cost = 2.0615 bestCost = 2.0514 candidates.size() = 30
        [72] cost = 2.0571 bestCost = 2.0514 candidates.size() = 30
        [73] cost = 2.0615 bestCost = 2.0514 candidates.size() = 29
        [74] cost = 2.0659 bestCost = 2.0514 candidates.size() = 28
        [75] cost = 2.0616 bestCost = 2.0514 candidates.size() = 28
        [76] cost = 2.0659 bestCost = 2.0514 candidates.size() = 27
        [77] cost = 2.0703 bestCost = 2.0514 candidates.size() = 26
        [78] cost = 2.0659 bestCost = 2.0514 candidates.size() = 27
        [79] cost = 2.0616 bestCost = 2.0514 candidates.size() = 27
        [80] cost = 2.0659 bestCost = 2.0514 candidates.size() = 26
        [81] cost = 2.0704 bestCost = 2.0514 candidates.size() = 25
        [82] cost = 2.0660 bestCost = 2.0514 candidates.size() = 25
        [83] cost = 2.0704 bestCost = 2.0514 candidates.size() = 24
        [84] cost = 2.0754 bestCost = 2.0514 candidates.size() = 23
        [85] cost = 2.0709 bestCost = 2.0514 candidates.size() = 25
        [86] cost = 2.0666 bestCost = 2.0514 candidates.size() = 26
        [87] cost = 2.0622 bestCost = 2.0514 candidates.size() = 26
        [88] cost = 2.0666 bestCost = 2.0514 candidates.size() = 25
        [89] cost = 2.0710 bestCost = 2.0514 candidates.size() = 24
        [90] cost = 2.0667 bestCost = 2.0514 candidates.size() = 24
        [91] cost = 2.0710 bestCost = 2.0514 candidates.size() = 23
        [92] cost = 2.0754 bestCost = 2.0514 candidates.size() = 22
        [93] cost = 2.0710 bestCost = 2.0514 candidates.size() = 23
        [94] cost = 2.0667 bestCost = 2.0514 candidates.size() = 23
        [95] cost = 2.0710 bestCost = 2.0514 candidates.size() = 22
        [96] cost = 2.0755 bestCost = 2.0514 candidates.size() = 21
        [97] cost = 2.0711 bestCost = 2.0514 candidates.size() = 21
        [98] cost = 2.0755 bestCost = 2.0514 candidates.size() = 20
        [99] cost = 2.0799 bestCost = 2.0514 candidates.size() = 19
        [100] cost = 2.0754 bestCost = 2.0514 candidates.size() = 22
        [101] cost = 2.0709 bestCost = 2.0514 candidates.size() = 24
        [102] cost = 2.0666 bestCost = 2.0514 candidates.size() = 25
        [103] cost = 2.0622 bestCost = 2.0514 candidates.size() = 25
        [104] cost = 2.0666 bestCost = 2.0514 candidates.size() = 24
        [105] cost = 2.0710 bestCost = 2.0514 candidates.size() = 23
        [106] cost = 2.0667 bestCost = 2.0514 candidates.size() = 23
        [107] cost = 2.0710 bestCost = 2.0514 candidates.size() = 22
        [108] cost = 2.0754 bestCost = 2.0514 candidates.size() = 21
        [109] cost = 2.0710 bestCost = 2.0514 candidates.size() = 22
        [110] cost = 2.0667 bestCost = 2.0514 candidates.size() = 22
        [111] cost = 2.0710 bestCost = 2.0514 candidates.size() = 21
        [112] cost = 2.0755 bestCost = 2.0514 candidates.size() = 20
        [113] cost = 2.0711 bestCost = 2.0514 candidates.size() = 20
        [114] cost = 2.0755 bestCost = 2.0514 candidates.size() = 19
        [115] cost = 2.0805 bestCost = 2.0514 candidates.size() = 18
        [116] cost = 2.0760 bestCost = 2.0514 candidates.size() = 20
        [117] cost = 2.0716 bestCost = 2.0514 candidates.size() = 21
        [118] cost = 2.0673 bestCost = 2.0514 candidates.size() = 21
        [119] cost = 2.0716 bestCost = 2.0514 candidates.size() = 20
        [120] cost = 2.0761 bestCost = 2.0514 candidates.size() = 19
        [121] cost = 2.0717 bestCost = 2.0514 candidates.size() = 19
        [122] cost = 2.0761 bestCost = 2.0514 candidates.size() = 18
        [123] cost = 2.0805 bestCost = 2.0514 candidates.size() = 17
        [124] cost = 2.0761 bestCost = 2.0514 candidates.size() = 18
        [125] cost = 2.0717 bestCost = 2.0514 candidates.size() = 18
        [126] cost = 2.0761 bestCost = 2.0514 candidates.size() = 17
        [127] cost = 2.0806 bestCost = 2.0514 candidates.size() = 16
        [128] cost = 2.0762 bestCost = 2.0514 candidates.size() = 16
        [129] cost = 2.0806 bestCost = 2.0514 candidates.size() = 15
        [130] cost = 2.0850 bestCost = 2.0514 candidates.size() = 14
        [131] cost = 2.0799 bestCost = 2.0514 candidates.size() = 19
        [132] cost = 2.0748 bestCost = 2.0514 candidates.size() = 23
        [133] cost = 2.0703 bestCost = 2.0514 candidates.size() = 26
        [134] cost = 2.0659 bestCost = 2.0514 candidates.size() = 28
        [135] cost = 2.0615 bestCost = 2.0514 candidates.size() = 29
        [136] cost = 2.0571 bestCost = 2.0514 candidates.size() = 29
        [137] cost = 2.0615 bestCost = 2.0514 candidates.size() = 28
        [138] cost = 2.0659 bestCost = 2.0514 candidates.size() = 27
        [139] cost = 2.0616 bestCost = 2.0514 candidates.size() = 27
        [140] cost = 2.0659 bestCost = 2.0514 candidates.size() = 26
        [141] cost = 2.0703 bestCost = 2.0514 candidates.size() = 25
        [142] cost = 2.0659 bestCost = 2.0514 candidates.size() = 26
        [143] cost = 2.0616 bestCost = 2.0514 candidates.size() = 26
        [144] cost = 2.0659 bestCost = 2.0514 candidates.size() = 25
        [145] cost = 2.0704 bestCost = 2.0514 candidates.size() = 24
        [146] cost = 2.0660 bestCost = 2.0514 candidates.size() = 24
        [147] cost = 2.0704 bestCost = 2.0514 candidates.size() = 23
        [148] cost = 2.0754 bestCost = 2.0514 candidates.size() = 22
        [149] cost = 2.0709 bestCost = 2.0514 candidates.size() = 24
        [150] cost = 2.0666 bestCost = 2.0514 candidates.size() = 25
        [151] cost = 2.0622 bestCost = 2.0514 candidates.size() = 25
        [152] cost = 2.0666 bestCost = 2.0514 candidates.size() = 24
        [153] cost = 2.0710 bestCost = 2.0514 candidates.size() = 23
        [154] cost = 2.0667 bestCost = 2.0514 candidates.size() = 23
        [155] cost = 2.0710 bestCost = 2.0514 candidates.size() = 22
        [156] cost = 2.0754 bestCost = 2.0514 candidates.size() = 21
        [157] cost = 2.0710 bestCost = 2.0514 candidates.size() = 22
        [158] cost = 2.0667 bestCost = 2.0514 candidates.size() = 22
        [159] cost = 2.0710 bestCost = 2.0514 candidates.size() = 21
        [160] cost = 2.0755 bestCost = 2.0514 candidates.size() = 20
        [161] cost = 2.0711 bestCost = 2.0514 candidates.size() = 20
        [162] cost = 2.0755 bestCost = 2.0514 candidates.size() = 19
        [163] cost = 2.0799 bestCost = 2.0514 candidates.size() = 18
        [164] cost = 2.0754 bestCost = 2.0514 candidates.size() = 21
        [165] cost = 2.0709 bestCost = 2.0514 candidates.size() = 23
        [166] cost = 2.0666 bestCost = 2.0514 candidates.size() = 24
        [167] cost = 2.0622 bestCost = 2.0514 candidates.size() = 24
        [168] cost = 2.0666 bestCost = 2.0514 candidates.size() = 23
        [169] cost = 2.0710 bestCost = 2.0514 candidates.size() = 22
        [170] cost = 2.0667 bestCost = 2.0514 candidates.size() = 22
        [171] cost = 2.0710 bestCost = 2.0514 candidates.size() = 21
        [172] cost = 2.0754 bestCost = 2.0514 candidates.size() = 20
        [173] cost = 2.0710 bestCost = 2.0514 candidates.size() = 21
        [174] cost = 2.0667 bestCost = 2.0514 candidates.size() = 21
        [175] cost = 2.0710 bestCost = 2.0514 candidates.size() = 20
        [176] cost = 2.0755 bestCost = 2.0514 candidates.size() = 19
        [177] cost = 2.0711 bestCost = 2.0514 candidates.size() = 19
        [178] cost = 2.0755 bestCost = 2.0514 candidates.size() = 18
        [179] cost = 2.0805 bestCost = 2.0514 candidates.size() = 17
        [180] cost = 2.0760 bestCost = 2.0514 candidates.size() = 19
        [181] cost = 2.0716 bestCost = 2.0514 candidates.size() = 20
        [182] cost = 2.0673 bestCost = 2.0514 candidates.size() = 20
        [183] cost = 2.0716 bestCost = 2.0514 candidates.size() = 19
        [184] cost = 2.0761 bestCost = 2.0514 candidates.size() = 18
        [185] cost = 2.0717 bestCost = 2.0514 candidates.size() = 18
        [186] cost = 2.0761 bestCost = 2.0514 candidates.size() = 17
        [187] cost = 2.0805 bestCost = 2.0514 candidates.size() = 16
        [188] cost = 2.0761 bestCost = 2.0514 candidates.size() = 17
        [189] cost = 2.0717 bestCost = 2.0514 candidates.size() = 17
        [190] cost = 2.0761 bestCost = 2.0514 candidates.size() = 16
        [191] cost = 2.0806 bestCost = 2.0514 candidates.size() = 15
        [192] cost = 2.0762 bestCost = 2.0514 candidates.size() = 15
        [193] cost = 2.0806 bestCost = 2.0514 candidates.size() = 14
        [194] cost = 2.0856 bestCost = 2.0514 candidates.size() = 13
        [195] cost = 2.0805 bestCost = 2.0514 candidates.size() = 17
        [196] cost = 2.0760 bestCost = 2.0514 candidates.size() = 20
        [197] cost = 2.0715 bestCost = 2.0514 candidates.size() = 22
        [198] cost = 2.0672 bestCost = 2.0514 candidates.size() = 23
        [199] cost = 2.0628 bestCost = 2.0514 candidates.size() = 23
        [200] cost = 2.0672 bestCost = 2.0514 candidates.size() = 22
        [201] cost = 2.0716 bestCost = 2.0514 candidates.size() = 21
        [202] cost = 2.0673 bestCost = 2.0514 candidates.size() = 21
        [203] cost = 2.0716 bestCost = 2.0514 candidates.size() = 20
        [204] cost = 2.0760 bestCost = 2.0514 candidates.size() = 19
        [205] cost = 2.0716 bestCost = 2.0514 candidates.size() = 20
        [206] cost = 2.0673 bestCost = 2.0514 candidates.size() = 20
        [207] cost = 2.0716 bestCost = 2.0514 candidates.size() = 19
        [208] cost = 2.0761 bestCost = 2.0514 candidates.size() = 18
        [209] cost = 2.0717 bestCost = 2.0514 candidates.size() = 18
        [210] cost = 2.0761 bestCost = 2.0514 candidates.size() = 17
        [211] cost = 2.0811 bestCost = 2.0514 candidates.size() = 16
        [212] cost = 2.0766 bestCost = 2.0514 candidates.size() = 18
        [213] cost = 2.0723 bestCost = 2.0514 candidates.size() = 19
        [214] cost = 2.0679 bestCost = 2.0514 candidates.size() = 19
        [215] cost = 2.0723 bestCost = 2.0514 candidates.size() = 18
        [216] cost = 2.0767 bestCost = 2.0514 candidates.size() = 17
        [217] cost = 2.0724 bestCost = 2.0514 candidates.size() = 17
        [218] cost = 2.0767 bestCost = 2.0514 candidates.size() = 16
        [219] cost = 2.0811 bestCost = 2.0514 candidates.size() = 15
        [220] cost = 2.0767 bestCost = 2.0514 candidates.size() = 16
        [221] cost = 2.0724 bestCost = 2.0514 candidates.size() = 16
        [222] cost = 2.0767 bestCost = 2.0514 candidates.size() = 15
        [223] cost = 2.0812 bestCost = 2.0514 candidates.size() = 14
        [224] cost = 2.0768 bestCost = 2.0514 candidates.size() = 14
        [225] cost = 2.0812 bestCost = 2.0514 candidates.size() = 13
        [226] cost = 2.0856 bestCost = 2.0514 candidates.size() = 12
        [227] cost = 2.0811 bestCost = 2.0514 candidates.size() = 15
        [228] cost = 2.0766 bestCost = 2.0514 candidates.size() = 17
        [229] cost = 2.0723 bestCost = 2.0514 candidates.size() = 18
        [230] cost = 2.0679 bestCost = 2.0514 candidates.size() = 18
        [231] cost = 2.0723 bestCost = 2.0514 candidates.size() = 17
        [232] cost = 2.0767 bestCost = 2.0514 candidates.size() = 16
        [233] cost = 2.0724 bestCost = 2.0514 candidates.size() = 16
        [234] cost = 2.0767 bestCost = 2.0514 candidates.size() = 15
        [235] cost = 2.0811 bestCost = 2.0514 candidates.size() = 14
        [236] cost = 2.0767 bestCost = 2.0514 candidates.size() = 15
        [237] cost = 2.0724 bestCost = 2.0514 candidates.size() = 15
        [238] cost = 2.0767 bestCost = 2.0514 candidates.size() = 14
        [239] cost = 2.0812 bestCost = 2.0514 candidates.size() = 13
        [240] cost = 2.0768 bestCost = 2.0514 candidates.size() = 13
        [241] cost = 2.0812 bestCost = 2.0514 candidates.size() = 12
        [242] cost = 2.0862 bestCost = 2.0514 candidates.size() = 11
        [243] cost = 2.0817 bestCost = 2.0514 candidates.size() = 13
        [244] cost = 2.0773 bestCost = 2.0514 candidates.size() = 14
        [245] cost = 2.0730 bestCost = 2.0514 candidates.size() = 14
        [246] cost = 2.0773 bestCost = 2.0514 candidates.size() = 13
        [247] cost = 2.0818 bestCost = 2.0514 candidates.size() = 12
        [248] cost = 2.0774 bestCost = 2.0514 candidates.size() = 12
        [249] cost = 2.0818 bestCost = 2.0514 candidates.size() = 11
        [250] cost = 2.0862 bestCost = 2.0514 candidates.size() = 10
        [251] cost = 2.0818 bestCost = 2.0514 candidates.size() = 11
        [252] cost = 2.0774 bestCost = 2.0514 candidates.size() = 11
        [253] cost = 2.0818 bestCost = 2.0514 candidates.size() = 10
        [254] cost = 2.0863 bestCost = 2.0514 candidates.size() = 9
        [255] cost = 2.0819 bestCost = 2.0514 candidates.size() = 9
        [256] cost = 2.0863 bestCost = 2.0514 candidates.size() = 8
        [257] cost = 2.1075 bestCost = 2.0514 candidates.size() = 7
        [258] cost = 2.1018 bestCost = 2.0514 candidates.size() = 13
        [259] cost = 2.0967 bestCost = 2.0514 candidates.size() = 18
        [260] cost = 2.0916 bestCost = 2.0514 candidates.size() = 22
        [261] cost = 2.0872 bestCost = 2.0514 candidates.size() = 25
        [262] cost = 2.0827 bestCost = 2.0514 candidates.size() = 27
        [263] cost = 2.0783 bestCost = 2.0514 candidates.size() = 28
        [264] cost = 2.0739 bestCost = 2.0514 candidates.size() = 28
        [265] cost = 2.0783 bestCost = 2.0514 candidates.size() = 27
        [266] cost = 2.0828 bestCost = 2.0514 candidates.size() = 26
        [267] cost = 2.0784 bestCost = 2.0514 candidates.size() = 26
        [268] cost = 2.0828 bestCost = 2.0514 candidates.size() = 25
        [269] cost = 2.0872 bestCost = 2.0514 candidates.size() = 24
        [270] cost = 2.0828 bestCost = 2.0514 candidates.size() = 25
        [271] cost = 2.0784 bestCost = 2.0514 candidates.size() = 25
        [272] cost = 2.0828 bestCost = 2.0514 candidates.size() = 24
        [273] cost = 2.0873 bestCost = 2.0514 candidates.size() = 23
        [274] cost = 2.0829 bestCost = 2.0514 candidates.size() = 23
        [275] cost = 2.0873 bestCost = 2.0514 candidates.size() = 22
        [276] cost = 2.0923 bestCost = 2.0514 candidates.size() = 21
        [277] cost = 2.0878 bestCost = 2.0514 candidates.size() = 23
        [278] cost = 2.0834 bestCost = 2.0514 candidates.size() = 24
        [279] cost = 2.0790 bestCost = 2.0514 candidates.size() = 24
        [280] cost = 2.0834 bestCost = 2.0514 candidates.size() = 23
        [281] cost = 2.0879 bestCost = 2.0514 candidates.size() = 22
        [282] cost = 2.0835 bestCost = 2.0514 candidates.size() = 22
        [283] cost = 2.0879 bestCost = 2.0514 candidates.size() = 21
        [284] cost = 2.0923 bestCost = 2.0514 candidates.size() = 20
        [285] cost = 2.0879 bestCost = 2.0514 candidates.size() = 21
        [286] cost = 2.0835 bestCost = 2.0514 candidates.size() = 21
        [287] cost = 2.0879 bestCost = 2.0514 candidates.size() = 20
        [288] cost = 2.0923 bestCost = 2.0514 candidates.size() = 19
        [289] cost = 2.0880 bestCost = 2.0514 candidates.size() = 19
        [290] cost = 2.0923 bestCost = 2.0514 candidates.size() = 18
        [291] cost = 2.0967 bestCost = 2.0514 candidates.size() = 17
        [292] cost = 2.0923 bestCost = 2.0514 candidates.size() = 20
        [293] cost = 2.0878 bestCost = 2.0514 candidates.size() = 22
        [294] cost = 2.0834 bestCost = 2.0514 candidates.size() = 23
        [295] cost = 2.0790 bestCost = 2.0514 candidates.size() = 23
        [296] cost = 2.0834 bestCost = 2.0514 candidates.size() = 22
        [297] cost = 2.0879 bestCost = 2.0514 candidates.size() = 21
        [298] cost = 2.0835 bestCost = 2.0514 candidates.size() = 21
        [299] cost = 2.0879 bestCost = 2.0514 candidates.size() = 20
        [300] cost = 2.0923 bestCost = 2.0514 candidates.size() = 19
        [301] cost = 2.0879 bestCost = 2.0514 candidates.size() = 20
        [302] cost = 2.0835 bestCost = 2.0514 candidates.size() = 20
        [303] cost = 2.0879 bestCost = 2.0514 candidates.size() = 19
        [304] cost = 2.0923 bestCost = 2.0514 candidates.size() = 18
        [305] cost = 2.0880 bestCost = 2.0514 candidates.size() = 18
        [306] cost = 2.0923 bestCost = 2.0514 candidates.size() = 17
        [307] cost = 2.0973 bestCost = 2.0514 candidates.size() = 16
        [308] cost = 2.0929 bestCost = 2.0514 candidates.size() = 18
        [309] cost = 2.0885 bestCost = 2.0514 candidates.size() = 19
        [310] cost = 2.0841 bestCost = 2.0514 candidates.size() = 19
        [311] cost = 2.0885 bestCost = 2.0514 candidates.size() = 18
        [312] cost = 2.0930 bestCost = 2.0514 candidates.size() = 17
        [313] cost = 2.0886 bestCost = 2.0514 candidates.size() = 17
        [314] cost = 2.0930 bestCost = 2.0514 candidates.size() = 16
        [315] cost = 2.0973 bestCost = 2.0514 candidates.size() = 15
        [316] cost = 2.0930 bestCost = 2.0514 candidates.size() = 16
        [317] cost = 2.0886 bestCost = 2.0514 candidates.size() = 16
        [318] cost = 2.0930 bestCost = 2.0514 candidates.size() = 15
        [319] cost = 2.0974 bestCost = 2.0514 candidates.size() = 14
        [320] cost = 2.0931 bestCost = 2.0514 candidates.size() = 14
        [321] cost = 2.0974 bestCost = 2.0514 candidates.size() = 13
        [322] cost = 2.1024 bestCost = 2.0514 candidates.size() = 12
        [323] cost = 2.0973 bestCost = 2.0514 candidates.size() = 16
        [324] cost = 2.0929 bestCost = 2.0514 candidates.size() = 19
        [325] cost = 2.0884 bestCost = 2.0514 candidates.size() = 21
        [326] cost = 2.0840 bestCost = 2.0514 candidates.size() = 22
        [327] cost = 2.0796 bestCost = 2.0514 candidates.size() = 22
        [328] cost = 2.0840 bestCost = 2.0514 candidates.size() = 21
        [329] cost = 2.0885 bestCost = 2.0514 candidates.size() = 20
        [330] cost = 2.0841 bestCost = 2.0514 candidates.size() = 20
        [331] cost = 2.0885 bestCost = 2.0514 candidates.size() = 19
        [332] cost = 2.0929 bestCost = 2.0514 candidates.size() = 18
        [333] cost = 2.0885 bestCost = 2.0514 candidates.size() = 19
        [334] cost = 2.0841 bestCost = 2.0514 candidates.size() = 19
        [335] cost = 2.0885 bestCost = 2.0514 candidates.size() = 18
        [336] cost = 2.0930 bestCost = 2.0514 candidates.size() = 17
        [337] cost = 2.0886 bestCost = 2.0514 candidates.size() = 17
        [338] cost = 2.0930 bestCost = 2.0514 candidates.size() = 16
        [339] cost = 2.0979 bestCost = 2.0514 candidates.size() = 15
        [340] cost = 2.0935 bestCost = 2.0514 candidates.size() = 17
        [341] cost = 2.0891 bestCost = 2.0514 candidates.size() = 18
        [342] cost = 2.0847 bestCost = 2.0514 candidates.size() = 18
        [343] cost = 2.0891 bestCost = 2.0514 candidates.size() = 17
        [344] cost = 2.0936 bestCost = 2.0514 candidates.size() = 16
        [345] cost = 2.0892 bestCost = 2.0514 candidates.size() = 16
        [346] cost = 2.0936 bestCost = 2.0514 candidates.size() = 15
        [347] cost = 2.0979 bestCost = 2.0514 candidates.size() = 14
        [348] cost = 2.0936 bestCost = 2.0514 candidates.size() = 15
        [349] cost = 2.0892 bestCost = 2.0514 candidates.size() = 15
        [350] cost = 2.0936 bestCost = 2.0514 candidates.size() = 14
        [351] cost = 2.0980 bestCost = 2.0514 candidates.size() = 13
        [352] cost = 2.0937 bestCost = 2.0514 candidates.size() = 13
        [353] cost = 2.0980 bestCost = 2.0514 candidates.size() = 12
        [354] cost = 2.1024 bestCost = 2.0514 candidates.size() = 11
        [355] cost = 2.0979 bestCost = 2.0514 candidates.size() = 14
        [356] cost = 2.0935 bestCost = 2.0514 candidates.size() = 16
        [357] cost = 2.0891 bestCost = 2.0514 candidates.size() = 17
        [358] cost = 2.0847 bestCost = 2.0514 candidates.size() = 17
        [359] cost = 2.0891 bestCost = 2.0514 candidates.size() = 16
        [360] cost = 2.0936 bestCost = 2.0514 candidates.size() = 15
        [361] cost = 2.0892 bestCost = 2.0514 candidates.size() = 15
        [362] cost = 2.0936 bestCost = 2.0514 candidates.size() = 14
        [363] cost = 2.0979 bestCost = 2.0514 candidates.size() = 13
        [364] cost = 2.0936 bestCost = 2.0514 candidates.size() = 14
        [365] cost = 2.0892 bestCost = 2.0514 candidates.size() = 14
        [366] cost = 2.0936 bestCost = 2.0514 candidates.size() = 13
        [367] cost = 2.0980 bestCost = 2.0514 candidates.size() = 12
        [368] cost = 2.0937 bestCost = 2.0514 candidates.size() = 12
        [369] cost = 2.0980 bestCost = 2.0514 candidates.size() = 11
        [370] cost = 2.1030 bestCost = 2.0514 candidates.size() = 10
        [371] cost = 2.0986 bestCost = 2.0514 candidates.size() = 12
        [372] cost = 2.0942 bestCost = 2.0514 candidates.size() = 13
        [373] cost = 2.0898 bestCost = 2.0514 candidates.size() = 13
        [374] cost = 2.0942 bestCost = 2.0514 candidates.size() = 12
        [375] cost = 2.0987 bestCost = 2.0514 candidates.size() = 11
        [376] cost = 2.0943 bestCost = 2.0514 candidates.size() = 11
        [377] cost = 2.0987 bestCost = 2.0514 candidates.size() = 10
        [378] cost = 2.1030 bestCost = 2.0514 candidates.size() = 9
        [379] cost = 2.0987 bestCost = 2.0514 candidates.size() = 10
        [380] cost = 2.0943 bestCost = 2.0514 candidates.size() = 10
        [381] cost = 2.0987 bestCost = 2.0514 candidates.size() = 9
        [382] cost = 2.1031 bestCost = 2.0514 candidates.size() = 8
        [383] cost = 2.0987 bestCost = 2.0514 candidates.size() = 8
        [384] cost = 2.1031 bestCost = 2.0514 candidates.size() = 7
        [385] cost = 2.1075 bestCost = 2.0514 candidates.size() = 6
        [386] cost = 2.1024 bestCost = 2.0514 candidates.size() = 11
        [387] cost = 2.0973 bestCost = 2.0514 candidates.size() = 15
        [388] cost = 2.0929 bestCost = 2.0514 candidates.size() = 18
        [389] cost = 2.0884 bestCost = 2.0514 candidates.size() = 20
        [390] cost = 2.0840 bestCost = 2.0514 candidates.size() = 21
        [391] cost = 2.0796 bestCost = 2.0514 candidates.size() = 21
        [392] cost = 2.0840 bestCost = 2.0514 candidates.size() = 20
        [393] cost = 2.0885 bestCost = 2.0514 candidates.size() = 19
        [394] cost = 2.0841 bestCost = 2.0514 candidates.size() = 19
        [395] cost = 2.0885 bestCost = 2.0514 candidates.size() = 18
        [396] cost = 2.0929 bestCost = 2.0514 candidates.size() = 17
        [397] cost = 2.0885 bestCost = 2.0514 candidates.size() = 18
        [398] cost = 2.0841 bestCost = 2.0514 candidates.size() = 18
        [399] cost = 2.0885 bestCost = 2.0514 candidates.size() = 17
        [400] cost = 2.0930 bestCost = 2.0514 candidates.size() = 16
        [401] cost = 2.0886 bestCost = 2.0514 candidates.size() = 16
        [402] cost = 2.0930 bestCost = 2.0514 candidates.size() = 15
        [403] cost = 2.0979 bestCost = 2.0514 candidates.size() = 14
        [404] cost = 2.0935 bestCost = 2.0514 candidates.size() = 16
        [405] cost = 2.0891 bestCost = 2.0514 candidates.size() = 17
        [406] cost = 2.0847 bestCost = 2.0514 candidates.size() = 17
        [407] cost = 2.0891 bestCost = 2.0514 candidates.size() = 16
        [408] cost = 2.0936 bestCost = 2.0514 candidates.size() = 15
        [409] cost = 2.0892 bestCost = 2.0514 candidates.size() = 15
        [410] cost = 2.0936 bestCost = 2.0514 candidates.size() = 14
        [411] cost = 2.0979 bestCost = 2.0514 candidates.size() = 13
        [412] cost = 2.0936 bestCost = 2.0514 candidates.size() = 14
        [413] cost = 2.0892 bestCost = 2.0514 candidates.size() = 14
        [414] cost = 2.0936 bestCost = 2.0514 candidates.size() = 13
        [415] cost = 2.0980 bestCost = 2.0514 candidates.size() = 12
        [416] cost = 2.0937 bestCost = 2.0514 candidates.size() = 12
        [417] cost = 2.0980 bestCost = 2.0514 candidates.size() = 11
        [418] cost = 2.1024 bestCost = 2.0514 candidates.size() = 10
        [419] cost = 2.0979 bestCost = 2.0514 candidates.size() = 13
        [420] cost = 2.0935 bestCost = 2.0514 candidates.size() = 15
        [421] cost = 2.0891 bestCost = 2.0514 candidates.size() = 16
        [422] cost = 2.0847 bestCost = 2.0514 candidates.size() = 16
        [423] cost = 2.0891 bestCost = 2.0514 candidates.size() = 15
        [424] cost = 2.0936 bestCost = 2.0514 candidates.size() = 14
        [425] cost = 2.0892 bestCost = 2.0514 candidates.size() = 14
        [426] cost = 2.0936 bestCost = 2.0514 candidates.size() = 13
        [427] cost = 2.0979 bestCost = 2.0514 candidates.size() = 12
        [428] cost = 2.0936 bestCost = 2.0514 candidates.size() = 13
        [429] cost = 2.0892 bestCost = 2.0514 candidates.size() = 13
        [430] cost = 2.0936 bestCost = 2.0514 candidates.size() = 12
        [431] cost = 2.0980 bestCost = 2.0514 candidates.size() = 11
        [432] cost = 2.0937 bestCost = 2.0514 candidates.size() = 11
        [433] cost = 2.0980 bestCost = 2.0514 candidates.size() = 10
        [434] cost = 2.1030 bestCost = 2.0514 candidates.size() = 9
        [435] cost = 2.0986 bestCost = 2.0514 candidates.size() = 11
        [436] cost = 2.0942 bestCost = 2.0514 candidates.size() = 12
        [437] cost = 2.0898 bestCost = 2.0514 candidates.size() = 12
        [438] cost = 2.0942 bestCost = 2.0514 candidates.size() = 11
        [439] cost = 2.0987 bestCost = 2.0514 candidates.size() = 10
        [440] cost = 2.0943 bestCost = 2.0514 candidates.size() = 10
        [441] cost = 2.0987 bestCost = 2.0514 candidates.size() = 9
        [442] cost = 2.1030 bestCost = 2.0514 candidates.size() = 8
        [443] cost = 2.0987 bestCost = 2.0514 candidates.size() = 9
        [444] cost = 2.0943 bestCost = 2.0514 candidates.size() = 9
        [445] cost = 2.0987 bestCost = 2.0514 candidates.size() = 8
        [446] cost = 2.1031 bestCost = 2.0514 candidates.size() = 7
        [447] cost = 2.0987 bestCost = 2.0514 candidates.size() = 7
        [448] cost = 2.1031 bestCost = 2.0514 candidates.size() = 6
        [449] cost = 2.1081 bestCost = 2.0514 candidates.size() = 5
        [450] cost = 2.1030 bestCost = 2.0514 candidates.size() = 9
        [451] cost = 2.0986 bestCost = 2.0514 candidates.size() = 12
        [452] cost = 2.0941 bestCost = 2.0514 candidates.size() = 14
        [453] cost = 2.0897 bestCost = 2.0514 candidates.size() = 15
        [454] cost = 2.0853 bestCost = 2.0514 candidates.size() = 15
        [455] cost = 2.0897 bestCost = 2.0514 candidates.size() = 14
        [456] cost = 2.0942 bestCost = 2.0514 candidates.size() = 13
        [457] cost = 2.0898 bestCost = 2.0514 candidates.size() = 13
        [458] cost = 2.0942 bestCost = 2.0514 candidates.size() = 12
        [459] cost = 2.0986 bestCost = 2.0514 candidates.size() = 11
        [460] cost = 2.0942 bestCost = 2.0514 candidates.size() = 12
        [461] cost = 2.0898 bestCost = 2.0514 candidates.size() = 12
        [462] cost = 2.0942 bestCost = 2.0514 candidates.size() = 11
        [463] cost = 2.0987 bestCost = 2.0514 candidates.size() = 10
        [464] cost = 2.0943 bestCost = 2.0514 candidates.size() = 10
        [465] cost = 2.0987 bestCost = 2.0514 candidates.size() = 9
        [466] cost = 2.1036 bestCost = 2.0514 candidates.size() = 8
        [467] cost = 2.0992 bestCost = 2.0514 candidates.size() = 10
        [468] cost = 2.0948 bestCost = 2.0514 candidates.size() = 11
        [469] cost = 2.0904 bestCost = 2.0514 candidates.size() = 11
        [470] cost = 2.0948 bestCost = 2.0514 candidates.size() = 10
        [471] cost = 2.0993 bestCost = 2.0514 candidates.size() = 9
        [472] cost = 2.0949 bestCost = 2.0514 candidates.size() = 9
        [473] cost = 2.0993 bestCost = 2.0514 candidates.size() = 8
        [474] cost = 2.1036 bestCost = 2.0514 candidates.size() = 7
        [475] cost = 2.0993 bestCost = 2.0514 candidates.size() = 8
        [476] cost = 2.0949 bestCost = 2.0514 candidates.size() = 8
        [477] cost = 2.0993 bestCost = 2.0514 candidates.size() = 7
        [478] cost = 2.1037 bestCost = 2.0514 candidates.size() = 6
        [479] cost = 2.0994 bestCost = 2.0514 candidates.size() = 6
        [480] cost = 2.1037 bestCost = 2.0514 candidates.size() = 5
        [481] cost = 2.1081 bestCost = 2.0514 candidates.size() = 4
        [482] cost = 2.1036 bestCost = 2.0514 candidates.size() = 7
        [483] cost = 2.0992 bestCost = 2.0514 candidates.size() = 9
        [484] cost = 2.0948 bestCost = 2.0514 candidates.size() = 10
        [485] cost = 2.0904 bestCost = 2.0514 candidates.size() = 10
        [486] cost = 2.0948 bestCost = 2.0514 candidates.size() = 9
        [487] cost = 2.0993 bestCost = 2.0514 candidates.size() = 8
        [488] cost = 2.0949 bestCost = 2.0514 candidates.size() = 8
        [489] cost = 2.0993 bestCost = 2.0514 candidates.size() = 7
        [490] cost = 2.1036 bestCost = 2.0514 candidates.size() = 6
        [491] cost = 2.0993 bestCost = 2.0514 candidates.size() = 7
        [492] cost = 2.0949 bestCost = 2.0514 candidates.size() = 7
        [493] cost = 2.0993 bestCost = 2.0514 candidates.size() = 6
        [494] cost = 2.1037 bestCost = 2.0514 candidates.size() = 5
        [495] cost = 2.0994 bestCost = 2.0514 candidates.size() = 5
        [496] cost = 2.1037 bestCost = 2.0514 candidates.size() = 4
        [497] cost = 2.1087 bestCost = 2.0514 candidates.size() = 3
        [498] cost = 2.1043 bestCost = 2.0514 candidates.size() = 5
        [499] cost = 2.0999 bestCost = 2.0514 candidates.size() = 6
        [500] cost = 2.0955 bestCost = 2.0514 candidates.size() = 6
        [501] cost = 2.0999 bestCost = 2.0514 candidates.size() = 5
        [502] cost = 2.1043 bestCost = 2.0514 candidates.size() = 4
        [503] cost = 2.1000 bestCost = 2.0514 candidates.size() = 4
        [504] cost = 2.1043 bestCost = 2.0514 candidates.size() = 3
        [505] cost = 2.1087 bestCost = 2.0514 candidates.size() = 2
        [506] cost = 2.1043 bestCost = 2.0514 candidates.size() = 3
        [507] cost = 2.1000 bestCost = 2.0514 candidates.size() = 3
        [508] cost = 2.1043 bestCost = 2.0514 candidates.size() = 2
        [509] cost = 2.1088 bestCost = 2.0514 candidates.size() = 1
        [510] cost = 2.1044 bestCost = 2.0514 candidates.size() = 1
        [511] cost = 2.1088 bestCost = 2.0514 candidates.size() = 0
        ===== Finish Cost-Based Backtracking Search =====

        cost[Activation]: mode(8) cost(0.0221) total_cost(0.0459)
        cost[Pool2D]: i(1 64 112 112) k(3 3) s(2 2) cost(0.0220) total_cost(0.0678)
        cost[Activation]: mode(8) cost(0.0064) total_cost(0.0799)
        cost[Conv2D]: i(1 64 56 56) w(64 64 1 1) s(1 1) p(0) cost(0.0264) total_cost(0.1063)
        cost[Activation]: mode(8) cost(0.0064) total_cost(0.1127)
        cost[Conv2D]: i(1 64 56 56) w(64 64 3 3) s(1 1) p(0) cost(0.0789) total_cost(0.1916)
        cost[Element]: cost(0.0181) total_cost(0.2096)
        cost[Activation]: mode(8) cost(0.0064) total_cost(0.2217)
        cost[Activation]: mode(8) cost(0.0064) total_cost(0.2281)
        cost[Conv2D]: i(1 64 56 56) w(64 64 3 3) s(1 1) p(0) cost(0.0789) total_cost(0.3069)
        cost[Element]: cost(0.0181) total_cost(0.3250)
        cost[Activation]: mode(8) cost(0.0064) total_cost(0.3371)
        cost[Conv2D]: i(1 64 56 56) w(128 64 1 1) s(2 2) p(0) cost(0.0203) total_cost(0.3574)
        cost[Activation]: mode(8) cost(0.0101) total_cost(0.3675)
        cost[Conv2D]: i(1 128 28 28) w(128 128 3 3) s(1 1) p(0) cost(0.0445) total_cost(0.4120)
        cost[Element]: cost(0.0073) total_cost(0.4192)
        cost[Activation]: mode(8) cost(0.0101) total_cost(0.4344)
        cost[Activation]: mode(8) cost(0.0101) total_cost(0.4445)
        cost[Conv2D]: i(1 128 28 28) w(128 128 3 3) s(1 1) p(0) cost(0.0445) total_cost(0.4890)
        cost[Element]: cost(0.0073) total_cost(0.4963)
        cost[Activation]: mode(8) cost(0.0101) total_cost(0.5114)
        cost[Conv2D]: i(1 128 28 28) w(256 128 1 1) s(2 2) p(0) cost(0.0277) total_cost(0.5391)
        cost[Activation]: mode(8) cost(0.0096) total_cost(0.5487)
        cost[Conv2D]: i(1 256 14 14) w(256 256 3 3) s(1 1) p(0) cost(0.0595) total_cost(0.6081)
        cost[Element]: cost(0.0055) total_cost(0.6136)
        cost[Activation]: mode(8) cost(0.0096) total_cost(0.6277)
        cost[Activation]: mode(8) cost(0.0096) total_cost(0.6372)
        cost[Conv2D]: i(1 256 14 14) w(256 256 3 3) s(1 1) p(0) cost(0.0595) total_cost(0.6967)
        cost[Element]: cost(0.0055) total_cost(0.7022)
        cost[Activation]: mode(8) cost(0.0096) total_cost(0.7163)
        cost[Conv2D]: i(1 256 14 14) w(512 256 1 1) s(2 2) p(0) cost(0.0435) total_cost(0.7597)
        cost[Activation]: mode(8) cost(0.0060) total_cost(0.7657)
        cost[Conv2D]: i(1 512 7 7) w(512 512 3 3) s(1 1) p(0) cost(0.1472) total_cost(0.9130)
        cost[Element]: cost(0.0104) total_cost(0.9233)
        cost[Activation]: mode(8) cost(0.0060) total_cost(0.9337)
        cost[Activation]: mode(8) cost(0.0060) total_cost(0.9397)
        cost[Conv2D]: i(1 512 7 7) w(512 512 3 3) s(1 1) p(0) cost(0.1472) total_cost(1.0870)
        cost[Element]: cost(0.0104) total_cost(1.0973)
        cost[Activation]: mode(8) cost(0.0060) total_cost(1.1077)
        cost[Conv2D]: i(1 3 224 224) w(64 3 7 7) s(2 2) p(0) cost(0.0724) total_cost(1.1802)
        cost[Conv2D]: i(1 64 56 56) w(64 64 3 3) s(1 1) p(0) cost(0.0789) total_cost(1.2590)
        cost[Conv2D]: i(1 64 56 56) w(64 64 3 3) s(1 1) p(0) cost(0.0789) total_cost(1.3379)
        cost[Conv2D]: i(1 128 28 28) w(128 128 3 3) s(1 1) p(0) cost(0.0445) total_cost(1.3824)
        cost[Conv2D]: i(1 64 56 56) w(128 64 3 3) s(2 2) p(0) cost(0.0714) total_cost(1.4539)
        cost[Conv2D]: i(1 256 14 14) w(256 256 3 3) s(1 1) p(0) cost(0.0595) total_cost(1.5133)
        cost[Conv2D]: i(1 128 28 28) w(256 128 3 3) s(2 2) p(0) cost(0.1271) total_cost(1.6404)
        cost[Conv2D]: i(1 512 7 7) w(512 512 3 3) s(1 1) p(0) cost(0.1472) total_cost(1.7877)
        cost[Conv2D]: i(1 256 14 14) w(512 256 3 3) s(2 2) p(0) cost(0.2637) total_cost(2.0514)
        Cost metrics: exe_time(2.0514) flops(6.8183) memory_access(270.3701) kernel_launches(58)
        ===== Applied Substitutions =====

        substitution[000]: 
            srcOp[0]: Conv_199
            srcOp[1]: Batchnorm_200
            dstOp[0]: Conv_271
        substitution[001]: 
            srcOp[0]: Conv_206
            srcOp[1]: Batchnorm_208
            dstOp[0]: Conv_275
        substitution[002]: 
            srcOp[0]: Conv_214
            srcOp[1]: Batchnorm_215
            dstOp[0]: Conv_283
        substitution[003]: 
            srcOp[0]: Conv_229
            srcOp[1]: Batchnorm_230
            dstOp[0]: Conv_290
        substitution[004]: 
            srcOp[0]: Conv_221
            srcOp[1]: Batchnorm_223
            dstOp[0]: Conv_298
        substitution[005]: 
            srcOp[0]: Conv_244
            srcOp[1]: Batchnorm_245
            dstOp[0]: Conv_301
        substitution[006]: 
            srcOp[0]: Conv_236
            srcOp[1]: Batchnorm_238
            dstOp[0]: Conv_306
        substitution[007]: 
            srcOp[0]: Conv_259
            srcOp[1]: Batchnorm_260
            dstOp[0]: Conv_308
        substitution[008]: 
            srcOp[0]: Conv_251
            srcOp[1]: Batchnorm_253
            dstOp[0]: Conv_310
optimized_cost = 2.0513906478881836

